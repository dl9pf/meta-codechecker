name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    container:
      image: crops/poky:ubuntu-18.04
      options: --user 1001:1001
    strategy:
      matrix:
        include:
          - oe-version-name: hardknott
            oe-version: 3.3.2

    steps:
    - name: Install required layers
      run: |
        echo "Getting layer for Poky version: ${{ matrix.oe-version-name }}-${{ matrix.oe-version }}"
        git clone --depth 1 -b "${{ matrix.oe-version-name }}-${{ matrix.oe-version }}" https://git.yoctoproject.org/git/poky
        cd poky
        git clone --depth 1 -b ${{ matrix.oe-version-name }} https://github.com/openembedded/meta-openembedded.git
        git clone --depth 1 -b ${{ matrix.oe-version-name }} https://github.com/kraj/meta-clang.git

    - uses: actions/checkout@v2
      with:
        path: 'poky/meta-codechecker'
    
    # We can cache up to 5Go
    # So we cache only sstate-cache and not the download directory
    - name: Cache sstates
      uses: actions/cache@v2
      with:
        path: |
          poky/build/sstate-cache
        key: ${{ matrix.oe-version }}
    
    # Github Actions can't build "bitbake simple-helloworld" from scratch,
    # because job can only run for a maximum of 360 minutes. So if the sstate_cache
    # is missing, we prefetch one. See https://github.com/samdolt/meta-codechecker/wiki
    - name: Prefetch sstate if missing
      run: |
        cd poky
        source $(pwd)/oe-init-build-env
        if [ ! -d "sstate-cache" ]; then
          echo "Download sstate-cache from meta-codechecker-lfs-cache"
          wget https://github.com/samdolt/meta-codechecker-lfs-cache/raw/main/sstate-cache_${{ matrix.oe-version }}.tar
          tar -xf sstate-cache_${{ matrix.oe-version }}.tar
        fi

    - name: Run bitbake
      run: |
        cd poky
        source $(pwd)/oe-init-build-env
        bitbake-layers add-layer ../meta-openembedded/meta-oe
        bitbake-layers add-layer ../meta-openembedded/meta-python
        bitbake-layers add-layer ../meta-clang
        bitbake-layers add-layer ../meta-codechecker
        bitbake simple-helloworld
    - name: Archive results
      uses: actions/upload-artifact@v2
      with:
        name: codechecker-report
        path: poky/build/tmp/deploy/CodeChecker
        if-no-files-found: error
    